#+begin_html
---
title: Extempore Documentation
tags:
---
#+end_html

#+BEGIN_HTML
  <h2 class="ui header">Extempore Docs</h2>
#+END_HTML

This blog contains a bunch of posts and tutorials covering [[https://github.com/digego/extempore][Extempore]],
a programming environment for live coding of multimedia and real-time
systems (among other things). If you're here to learn/find out more
about Extempore, then here's an overview of all the documentation and
some suggestions about where to start.  This list is hand-curated to
provide the best 'journey' through the concepts necessary to begin
using Extempore in anger.

Alternately, there's an automatically-generated [[../tags/index.html][tags page]] which also
allows you to browse by category.

If anything isn't clear, or you have suggestions/corrections, then
drop [[../bio/index.html][me]] a line at [[mailto:benjamin.j.swift@gmail.com][benjamin.j.swift@gmail.com]].

* Key concepts

# - [[file:../2012-10-24-extempore-tldr.org][What is Extempore?]] (Extempore's tl;dr)
- [[file:../2012-08-07-extempore-philosophy.org][The Extempore philosophy]]
- [[file:../2012-09-26-interacting-with-the-extempore-compiler.org][Interacting with the Extempore compiler]]
- [[file:../2012-10-15-time-in-extempore.org][Time in Extempore]]
- [[http://extempore.moso.com.au/temporal_recursion.html][The Many Faces of a Temporal Recursion]] - from Andrew's website.
# - Concurrency in Extempore

* Getting started

Here's some help to get you up and running with Extempore, right from
the beginning steps.

- [[./2013-11-12-building-extempore-through-homebrew.org][Building Extempore with Homebrew]]
- Building Extempore from source ([[file:../2013-03-20-building-extempore-on-osx-linux.org][OSX & Linux]], [[file:../2013-03-20-building-extempore-on-windows.org][Windows]])
- [[../2013-12-16-building-the-extempore-standard-library.org][Building the Extempore standard library]]
- Setting up your editor ([[file:../2012-10-10-extempore-emacs-cheat-sheet.org][Emacs]],  [[file:../2012-10-23-extempore-st2-cheat-sheet.org][Sublime Text 2]])
- [[file:../2012-09-26-interacting-with-the-extempore-compiler.org][Interacting with the Extempore compiler]]
- [[file:../2012-10-15-extempore-for-impromptu-users.org][Extempore for Impromptu users]]

* xtlang reference material

xtlang is a strongly-typed programming language with a Lisp syntax
which is JIT-compiled into high-performance native machine code by the
Extempore compiler (with the help of [[http://llvm.org][LLVM]]). xtlang is in many ways
Extempore's 'secret sauce', and most of the code examples in this
documentation will be in xtlang.

- [[file:../2012-08-09-xtlang-type-reference.org][xtlang type reference]]
- [[file:../2012-08-13-understanding-pointers-in-xtlang.org][Understanding pointers in xtlang]]
- [[file:../2012-08-17-memory-management-in-extempore.org][Memory management in Extempore]]
- [[file:../2012-10-03-xtlang-type-diagrams.org][xtlang type diagrams]]
- [[file:../2012-08-23-binding-to-c-libs.org][Binding to C libraries]]
- [[file:../2014-02-20-extempore-generics.org][Extempore Generics]]
# TODO
# - Scheme/xtlang interop
# - xtlang for C programmers

* Audio

Extempore is a great environment for audio DSP and number-crunching,
particularly in a dynamic, interactive, 'live' coding context. It
supports low-level, sample-based DSP as well as soft-synths and
samplers (written in xtlang) which can be played like virtual MIDI
instruments. Both types of audio processing can also be used
together---in fact this is encouraged :)

** Low-level DSP

- [[file:../2012-06-07-dsp-basics-in-extempore.org][DSP basics part I]]
- [[file:../2012-06-07-more-dsp-and-extempore-types.org][DSP basics part II]]
- [[file:../2012-09-28-making-an-instrument.org][Making an Extempore instrument]]
- [[file:../2012-11-26-reading-writing-audio-files-in-extempore.org][Reading and writing audio files]]

** High-level (instrument-based) audio

- [[file:../2012-10-16-a-really-simple-instrument.org][A really simple instrument]]
- [[file:../2012-10-17-loading-and-using-a-sampler.org][Loading and using a sampler]]
- [[file:../2012-10-15-playing-an-instrument-part-i.org][Making it go bing: playing an instrument]]
- [[file:../2012-10-15-playing-an-instrument-part-ii.org][Musical patterns: playing with pitch and rhythm]]

** Relevant examples

- =examples/core/audio_101.xtm=
- =examples/core/polysynth.xtm=
- =examples/core/fmsynth.xtm=
- =examples/external/electrofunk.xtm=
- =examples/external/audio_player.xtm=
- =examples/external/convolution_reverb.xtm=

* Graphics

Extempore supports working with graphics at several different levels
of abstraction. You can use low-leve [[http://www.opengl.org][OpenGL]] calls, or you can use the
higher-level 2D or 3D graphics libraries. And again, because
everything's in xtlang, you can mix-and-match!

** 2D

2D graphics primitives (like Quartz, Processing or Cairo) can be found
in =libs/external/openvg.xtm=. For an example of this stuff in action,
check out =examples/external/openvg.xtm=.

** 3D

Extempore has a 3D drawing pipeline written in xtlang,
which supports blender models, lighting (and other custom shaders) and
scene-graph type rendering.  And because it's all written in xtlang,
the whole pipeline itself is dynamic and tweakable on the fly.

The best place to see the 3D rendering pipeline in action is in the
=xtmrender= examples in =examples/external/=.


- OpenGL basics
- 2D drawing with cairo
- 3D rendering and meshes with Horde3D
- Image processing with GLSL shaders

* Misc

- [[file:../2012-10-15-xtlang-naming-conventions.org][xtlang naming conventions]]
# todo - xtlang blogging with Octopress

* Getting help

The [[mailto:extemporelang@googlegroups.com][mailing list]] and [[https://groups.google.com/group/extemporelang][google group]] are good places to start, or you
could see if we're on the *#extempore* freenode channel.
