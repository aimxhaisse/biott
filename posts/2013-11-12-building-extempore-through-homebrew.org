#+begin_html
---
title: Building Extempore through Homebrew on OSX and Linux
alias: ["./2013-11-12-building-extempore-through-homebrew.html"]
tags: setup osx linux
---
#+end_html
#+TOC: headlines 2

If you've tried to install Extempore in the past, you'll know that
building from source is a (moderately) painful process with about half
a dozen steps. We've tried to make Extempore binaries, but making sure
they work across the variety of platforms/processors is a massive
pain, especially for all the shared lib dependencies.

* Enter Homebrew

[[http://brew.sh][Homebrew]] has been my go-to package manager on OSX for several years
now.  In fact, over the last couple of years I've gradually been
contributing packages for various Extempore dependencies to make my
own life easier.

Well, now there's a homebrew formula for Extempore. The reason there
hasn't been one in the past is the need to patch and use a patched
version of LLVM, and since homebrew doesn't really allow for multiple
versions of a package side-by-side, I haven't been able to get a
patched LLVM for Extempore into the homebrew repo.

However, it's super easy in homebrew for me to maintain my /own/
package repo (which homebrew calls a *tap*), and I can have whatever
packages I like in it. So, assuming you have homebrew installed, make
sure everything is up-to-date

#+BEGIN_SRC sh
brew update

# check if anything is outdated
brew outdated

# upgrade all outdated packages
brew upgrade
#+END_SRC


Then, tap my homebrew repo

#+BEGIN_SRC sh
brew tap benswift/extempore
#+END_SRC

After that, homebrew knows about all the packages in my tap, which
includes Extempore.  You can install it with

#+BEGIN_SRC sh
brew install extempore
#+END_SRC

which will install the latest stable version of Extempore, as well as
(by default) all of the shared libs you need for the Extempore
standard library. If you want to grab the latest version from the
=master= branch, you can tell =brew= to do that with an additional
=--HEAD= argument.

Your extempore directory will be in
=/usr/local/Cellar/extempore/<VERSION_NUMBER>=, unless you installed
homebrew somewhere other than =/usr/local=. =cd= into that directory,
run =./extempore= and then you're ready to connect up an editor and
[[file:./2012-09-26-interacting-with-the-extempore-compiler.org][start evaluating Extempore code]]. You might also want to think about
[[file:2013-12-16-building-the-extempore-standard-library.org][pre-building the Extempore standard library]], since that will make
loading the audio and graphics libraries on startup /much/ quicker
(~20 seconds vs several minutes).

* Homebrew on Linux

There's a fork of [[https://github.com/Homebrew/linuxbrew][homebrew for Linux]] as well. Homebrew on Linux lives
in a =.linuxbrew= folder inside your home directory, so it shouldn't
interfere with your 'regular' package manager (=apt-get=, =yum=,
=pacman=, etc.).

Once you've installed homebrew on your Linux box then you can tap my
/Linux/ Extempore homebrew repo and install Extempore:

#+BEGIN_SRC sh
brew tap benswift/extemporelinux
#+END_SRC

This will print a few warnings about not linking formulae from this
tap over the top of existing ones. The Linux situation is a bit more
complicated than on OSX because I had to (on Ubuntu 13.10, anyway)
tweak a couple of other dependencies so they would build: =kissfft=
and =shivavg=. Basically, what's happening is that homebrew on Linux
by default just uses the same build formulae as on OSX, which in some
cases works fine (thanks to their shared *nix underpinnings) but in
other cases some small tweaks are required.

All this means is that there's an extra step required to install the
deps from my tap, which /should/ work, although your mileage may vary
depending on which Linux distro you're on.  [[mailto:extemporelang@googlegroups.com][Let me know]] if you run
into problems.

#+BEGIN_SRC sh
brew install benswift/extemporelinux/kissfft benswift/extemporelinux/shivavg
#+END_SRC

After that, you can

#+BEGIN_SRC sh
brew install extempore
#+END_SRC

If you'd rather not install homebrew on your linux box then you can
still [[file:./2013-03-20-building-extempore-on-osx-linux.org][build from source]] as before.

** Troubleshooting on Linux

Here are some additional notes from Andrew on his homebrew Ubuntu 12.10
experience:

- =brew install pcre= might require bz2 header files (which you can
  get with e.g. =sudo apt-get install libbz2-dev=)
- =python-dev= package (i.e. python header files) might need to be
  installed before boost (and therefore assimp) will compile.
- Mesa is a good bet for OpenGL stuff, I've had the best experiences
  on ubuntu, where the packages are =sudo apt-get install
  libgl1-mesa-dev libglu1-mesa-dev=

I'm working on smoothing out these issues, I'll keep this post updated
as I fix them. If you find any other gotchas (and I'm sure there will
be some, there are lots of Linux distros out there) then send an email
to the [[mailto:extemporelang@googlegroups.com][Extempore mailing list]] and I'll add them here as well.

* using scoop.sh for easy building on Windows

[[http://scoop.sh][scoop.sh]] seems promising as a similar alternative to homebrew on
Windows.  I haven't looked into it in detail yet myself, but I'll
hopefully have a crack at making an Extempore package for it at some
stage.  If anyone has experience with it and wants to help out, they'd
be very welcome :)
