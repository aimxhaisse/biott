#+begin_html
---
layout: post
title: "Extempore & Emacs cheat sheet"
date: 2012-10-10 14:13
comments: true
categories:
---
#+end_html

Learning [[http://www.gnu.org/software/emacs/][Emacs]] can be pretty daunting, and you don't /have/ to use Emacs
to use Extempore (see the [[https://github.com/mlozanov/extempore-sublime][Sublime Text 2 plugin]], for instance).
Still, if you're willing to invest the time, Emacs is a powerful and
flexible editing environment, and hacking Extempore code in Emacs can
actually be pretty fun once you get on top of it :)

I won't cover all the basics of Emacs here, because there are lots of
other places which do that pretty well. If you've never used Emacs
before, I suggest you go and read the [[http://www.masteringemacs.org/articles/2010/10/04/beginners-guide-to-emacs/][beginner's guide to Emacs]], which
explains some of the basic concepts and terminology.  Emacs also has a
built-in tutorial, which you can bring up with =C-h t=.

Think of this post you're reading now as more as a 'cheat sheet', for
dipping back into to refresh your memory when you just can't remember
how to do something off the top of your head.

* Installing Emacs

The Extempore Emacs mode (plugins are called 'modes' in Emacs)
requires Emacs version 24, which has been the current stable release
since about June 2012.

*OS X*

Binaries are available from [[http://emacsformacosx.com][emacsformacosx.com]]. In general, the
default one (i.e. big 'Download' button on that page) is probably the
best option, although if you know what you're doing feel free to
choose some other option (but remember that =extmpore.el= requires
Emacs 24).

If you're a [[http://mxcl.github.com/homebrew/][homebrew]] user, then you can also get Emacs with

#+begin_src sh
brew install --cocoa emacs
#+end_src

*Linux*

Your distro will probably will have Emacs installed, but you might
want to check which version is installed, and whether or not it
includes a graphical interface (rather than one which only works in a
terminal).  You can check the Emacs version with

#+begin_src sh
emacs --version
#+end_src

On ubuntu, the current default Emacs (v23) is out-of-date, but Damien
Cassou [[https://launchpad.net/~cassou/%2Barchive/emacs][has provided some more recent Emacs versions]] (and installation
instructions).

*Windows*

The [[http://ftp.gnu.org/gnu/emacs/windows/][Official GNU Windows binaries]] are probably as good as any.  Scroll
down to the bottom of that page for the most recent versions.

* Genral Emacs notes

Emacs is powered by a programming language called Emacs Lisp (elisp
for short). In Emacs, everything you do---every key you press, every
shortcut you invoke---is actually calling an elisp function. You can
think of Emacs as a (very specialised) elisp interpreter, which has 30
years (and millions of lines) of elisp code to help edit files,
interact with the OS, and do all sorts of weird and wacky things.

In Emacs documentation, you'll often see something like =M-x
load-theme= (pronounced /meta x, load theme/). To trigger this
command, press the *meta* key (which will probably be =alt= or
=option= on a modern keyboard) and the =x= key at the same time, then
(releasing both those keys) type in the function name =load-theme=.
The elisp function =load-theme= will be called, and you'll see a
prompt in your echo area which says =Load custom theme=, and you can
specify (by name) the name of the colour theme you want to load.

Shortcut keys, too, are ultimately just triggering elisp functions.
Even pressing the letter =e= on the keyboard in typing actually calls
a function called =self-insert-command= to put the =e= into the buffer
you're typing in. And =M-x= is just a way of calling these elisp
functions by name.

The main reason to bring this up is that in some ways Emacs is not
dissimilar to Extempore.  You (as a programmer) are interacting with a
running interpreter, giving commands which are evaluated, and the
state of the world is updated in response to these commands.  Of
course, in lots of was Emacs and Extempore are very different, but it
might be helpful in terms of thinking about how the whole thing works.

Now, on to the cheat sheet...

* File navigation

Note: with a shortcut like =C-x C-f=, press =C-x= and /then/ =C-f=, so
that the =x= is released before the =f= is pressed (although the
=ctrl= key /may be/ held down the whole time). In contrast, with a key
sequence like =C-M-x=, press the =ctrl=, =meta= and =x= keys
simultaneously.

- open file: =C-x C-f=
- save file: =C-x C-s=
- switch to buffer: =C-x b=, then the buffer's name
- split window horizontally: =C-x 2=
- split window vertically: =C-x 3=
- jump to other window (in split window setup): =C-x o=

* Cursor movement

In most Emacs situations, you can use /either/ the regular arrow keys
to navigate, or the default Emacs navigation commands:

- =C-f=: forward one character
- =C-b=: backward one character
- =C-n=: forward one line
- =C-p=: backward one line

There are also lots of other ways to move around, including (but not
limited to)

- beginning of line: =C-a=
- end of line of line: =C-e=
- search forward: =C-s=
- search backward: =C-r=
- set/unset mark (for highlighting): =C-<space>=

Mastering Emacs has a great post on [[http://www.masteringemacs.org/reading-guide/][effective editing]].

* Editing

- kill (cut): =C-w=
- copy: =M-w=
- yank (paste): =C-y=, then =M-y= to cycle through previous kills
- kill rest of line: =C-k=

* Editing Extempore code

These are the steps youll need to take to start hacking on a piece of
Extempore code in Emacs:

1. start Emacs (if it isn't running already)
2. open up a shell buffer in Emacs with =M-x shell=
3. =cd= into your Extempore directory and start up an =extempore=
   process, e.g. =./extempore --device 2=
4. open up an Emacs buffer with an Extempore file (=extempore-mode=
   should be loaded automatically when Emacs sees the =.xtm= file
   extension, assuming you added the relevant code to your =.emacs=)
5. connect to the running Extempore process: =C-x C-j= (needs to be
   done for /every/ =.xtm= buffer)

Then, to [[file:2012-09-26-interacting-with-the-extempore-compiler.org][evaluate]] xtlang code, use either

- evaluate enclosing s-expression: =C-x C-x=
- evaluate region: =C-x C-r=
- evaluate whole buffer: =C-x C-b=

To *restart the Extempore process*, just =C-c C-c= in the =*shell*=
buffer where =extempore= is running to kill it, then start it up
again.

* Getting out of (Emacs) trouble

Cancel: =C-g= (if you get into trouble)
Help (on a /function/): =C-h f=, then function name
Help (on a /variable/): =C-h v=, then variable name
Info: =C-h i=, then browse through the menus

For further reading, I can recommend the [[http://www.masteringemacs.org/reading-guide/][Emacs reading guide]] at
[[http://masteringemacs.org][masteringemacs.org]].
