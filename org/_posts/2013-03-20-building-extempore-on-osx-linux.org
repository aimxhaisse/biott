#+begin_html
---
layout: post
title: "Building Extempore on OSX & Linux"
date: 2013-03-20
comments: true
categories:
---
#+end_html

On OSX and Linux, Extempore has three main dependencies:

- =LLVM v3.2=
- =pcre=
- =portaudio v1.9=

The one (slightly) tricky dependency is LLVM v3.2, which requires a
patch (see instructions in the next section). If you have any problems
with these versions (or success with newer/older versions) then feel
free to let me know on the [[mailto:extemporelang@googlegroups.com][Extempore mailing list]].

*Linux*

Using a package manager is the easiest way to get most of the
dependencies. On a fresh Ubuntu 12.10, I needed the following packages

#+begin_src sh
sudo apt-get install g++ portaudio19-dev libpcre3-dev libgl1-mesa-dev
#+end_src

If you're on a different distro the package names might be slightly
different.

If you want to build any of them from source you can, but unless you
have a good reason to then the package option is probably best.

*OSX*

The easiest way to get the dependencies is through a package manager.
I use [[http://mxcl.github.com/homebrew/][Homebrew]], [fn:alternatives] which uses the [[https://developer.apple.com/downloads/index.action?%3Dcommand%2520line%2520tools][OSX command line
tools]]. With Homebrew, installing the dependencies is as simple as

#+begin_src sh
brew install pcre portaudio
#+end_src

* Building LLVM

Extempore has recently been updated to build against LLVM v3.2 (todo
check all numbers have been changed).  Unfortunately the bug in
=LLParser.cpp= hasn't yet been fixed[fn::although we're going to try
and get a fix in for v3.3] so you still need to patch it.  In general,
this means you still have to build LLVM from source.

The exception to this is if you're on OS X and using homebrew I've put
together a homebrew formula (=extras/llvm.rb=) which applies the patch
automatically. Since homebrew can install a formula directly by
specifying the formula path to the =brew= command line tool, homebrew
users can build their patched version of LLVM with

#+begin_src sh
brew install /path/to/extempore/extras/llvm.rb
#+end_src

If you're not using homebrew on OS X, then you'll have to patch and
build LLVM manually. You can get the LLVM 3.2 source [[http://llvm.org/releases/download.html#3.2][here]].  because
a small patch  (an LLVM source file) is required.

To apply the patch to the LLVM source file =LLParser.cpp= just move
into =llvm/lib/AsmParser= directory and then apply the
=llparser.patch= file which in can be found in =extempore/extras=.

#+begin_src sh
$ cd /path/to/llvm/lib/AsmParser
$ patch < /path/to/extempore/extras/llparser.patch
#+end_src

After that, building LLVM is the usual =./configure; make; make
install= process, with the addition of a =--prefix= location
specifying where everything will be installed into (such as a =build=
directory)

#+begin_src sh
$ cd /path/to/llvm
$ mkdir build
$ ./configure --prefix=/path/to/llvm/build --enable-optimized
$ make && make install
#+end_src

* Building Extempore

Now that all of the dependencies have been built, we can compile
Extempore. First, let Extempore know where the LLVM build
directory[fn:builddir] is by defining the shell variable
=EXT_LLVM_DIR=, for example

#+begin_src sh
$ export EXT_LLVM_DIR=/path/to/llvm/build
#+end_src

If you used the homebrew formula the LLVM build directory will
probably be =/usr/local/Cellar/llvm/3.2=.

Then you can build Extempore using the =all.bash= shell script 

#+begin_src sh
$ ./all.bash
#+end_src

...and you should have a shiny new =extempore= executable in your
directory to play with.

* Ok, so how do I start using Extempore?

The =extempore= executable on its own is cool, but things really start
to get interesting when you can interact with it by sending it xtlang
code to evaluate. So the next step is to [[file:2012-09-26-interacting-with-the-extempore-compiler.org][set up your text editor for
working with Extempore source code]].

After you're set up, then the next step is to learn about xtlang and
the Extempore runtime. The [[file:../extempore-docs/index.org][docs index]] has a complete list of all the
posts covering this stuff, and is probably the place to go next. Have
fun :)

[fn:alternatives] If you have a preferred package manager (Fink or
Macports) or even want to build them yourself, then you can do it that
way too.

[fn:builddir] i.e. the directory we specified with the =--prefix=
argument to the LLVM =./configure= script.
